{"version":3,"sources":["components/LineChart.js","components/CountrySelector.js","apis/covid.js","components/App.js","actions/index.js","reducers/index.js","reducers/countryListReducer.js","reducers/availableCountriesReducer.js","index.js"],"names":["LineGraph","chartRef","React","createRef","updateChart","chart","props","countriesData","length","data","labels","_","uniq","confirmed","map","Date","substr","lastItem","randomColor","replace","Math","random","toString","datasets","label","s","country","charAt","toUpperCase","slice","item","Cases","pointRadius","borderColor","uniqBy","update","this","chartReference","initChart","legend","display","prevprops","myChartRef","current","getContext","Chart","type","options","boxWidth","usePointStyle","scales","xAxes","ticks","gridLines","yAxes","className","style","background","borderRadius","padding","id","ref","Component","CountrySelector","renderCountries","availableCountries","sort","a","b","textA","Country","textB","index","value","key","Slug","onChange","e","undefined","find","target","marginBottom","axios","create","baseURL","App","loading","getCountryData","getAvailableCountries","console","log","color","fontWeight","LineChart","minHeight","textAlign","maxWidth","margin","renderChart","renderAdditionalInfo","connect","state","dataType","dispatch","getState","covid","get","response","payload","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"uPAqGeA,E,4MAhGbC,SAAWC,IAAMC,Y,EAejBC,YAAc,SAACC,GACb,GAAI,EAAKC,MAAMC,cAAcC,OAAS,EAAG,CACvCH,EAAMI,KAAKC,OAASC,IAAEC,KACpB,EAAKN,MAAMC,cAAc,GAAGM,UAAUC,KAAI,qBAAGC,KACtCC,OAAO,EAAG,QAGnB,IAKIC,EAAW,EAAKX,MAAMC,cACxB,EAAKD,MAAMC,cAAcC,OAAS,GAEhCU,EAAc,UAAUC,QAAQ,MAAM,WACxC,UAA2B,GAAhBC,KAAKC,WAAgBC,SAAS,OAE3CjB,EAAMI,KAAKc,SAAX,sBACKlB,EAAMI,KAAKc,UADhB,CAEE,CACEC,MAAM,GAAD,QAdWC,EAcKR,EAASS,QAbf,kBAAND,EAAuB,GAC3BA,EAAEE,OAAO,GAAGC,cAAgBH,EAAEI,MAAM,KAazCpB,KAAMQ,EAASJ,UAAUC,KAAI,SAACgB,GAC5B,OAAOA,EAAKC,SAEdC,YAAa,IACbC,YAAaf,KAIjBb,EAAMI,KAAKc,SAAWZ,IAAEuB,OAAO7B,EAAMI,KAAKc,UAAU,SAACd,GAAD,OAAUA,EAAKe,SAvBhD,IAACC,EAyBtBpB,EAAM8B,U,kEA3CNC,KAAKC,eAAiBD,KAAKE,YAC3BF,KAAKC,eAAeE,OAAOC,SAAU,EACrCJ,KAAKhC,YAAYgC,KAAKC,kB,yCAGLI,GACbL,KAAK9B,MAAMC,cAAcC,QAAUiC,EAAUlC,cAAcC,QAC7D4B,KAAKhC,YAAYgC,KAAKC,kB,kCAwCxB,IAAMK,EAAaN,KAAKnC,SAAS0C,QAAQC,WAAW,MACpD,OAAO,IAAIC,IAAMH,EAAY,CAC3BI,KAAM,OACNC,QAAS,CACPR,OAAQ,CACN7B,OAAQ,CACNsC,SAAU,EACVC,eAAe,IAGnBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,GAGPC,UAAW,CACTb,SAAS,KAIfc,MAAO,CACL,CACED,UAAW,CACTb,SAAS,W,+BAUrB,OACE,yBACEe,UAAU,eACVC,MAAO,CAAEC,WAAY,QAASC,aAAc,QAASC,QAAS,QAE9D,4BAAQC,GAAG,UAAUC,IAAKzB,KAAKnC,gB,GA3Ff6D,aCyCTC,E,4MAzCbC,gBAAkB,WAShB,OARI,EAAK1D,MAAM2D,oBACb,EAAK3D,MAAM2D,mBAAmBC,MAAK,SAACC,EAAGC,GACrC,IAAIC,EAAQF,EAAEG,QAAQ1C,cAClB2C,EAAQH,EAAEE,QAAQ1C,cACtB,OAAOyC,EAAQE,GAAS,EAAIF,EAAQE,EAAQ,EAAI,KAI7C5D,IAAEC,KAAK,EAAKN,MAAM2D,oBACtBC,OACApD,KAAI,SAACY,EAAS8C,GACb,OACE,4BAAQC,MAAO/C,EAAQ4C,QAASI,IAAG,UAAKhD,EAAQiD,MAAb,OAAoBH,IACpD9C,EAAQ4C,a,uDAKT,IAAD,OACP,OACE,4BACEM,SAAU,SAACC,QAIAC,IAFP,EAAKxE,MAAMC,cAAcwE,MAAK,SAACtE,GAC7B,OAAOA,EAAKiB,UAAYmD,EAAEG,OAAOP,UAGnC,EAAKnE,MAAMsE,UAAS,EAAMC,EAAEG,OAAOP,QAGvCjB,MAAO,CAAEyB,aAAc,MAAOvB,aAAc,SAC5CH,UAAU,4BAETnB,KAAK4B,kBACN,4BAAQS,MAAM,IAAd,yB,GApCsBX,a,gDCDfoB,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,gCCGLC,E,4MAmCJT,SAAW,SAACU,EAAS5D,GAEnB,OADA,EAAK4D,QAAUA,EACR,EAAKhF,MAAMiF,eAAe7D,I,kEAnCjCU,KAAK9B,MAAMkF,0B,oCAIX,OAAIpD,KAAKkD,SAA+C,IAApClD,KAAK9B,MAAMC,cAAcC,QAC3CiF,QAAQC,IAAItD,KAAKkD,SACV,yBAAK9B,MAAO,CAAEmC,MAAO,QAASC,WAAY,SAA1C,YACsC,IAApCxD,KAAK9B,MAAMC,cAAcC,OAC3B,kBAACqF,EAAD,CAAWtF,cAAe6B,KAAK9B,MAAMC,gBAG1C,yBAAKiD,MAAO,CAAEmC,MAAO,QAASC,WAAY,SACxC,oFACA,qE,6CAKN,GAAwC,IAApCxD,KAAK9B,MAAMC,cAAcC,OAC3B,OACE,yBAAKgD,MAAO,CAAEmC,MAAO,UACnB,4BACE,yBAAKnC,MAAO,CAAEoC,WAAY,SAA1B,YACA,kGAGA,8F,+BAcR,OADAH,QAAQC,IAAItD,KAAK9B,OAEf,yBACEiD,UAAU,KACVC,MAAO,CAAEC,WAAY,UAAWqC,UAAW,QAASnC,QAAS,QAE7D,wBACEH,MAAO,CACLmC,MAAO,QACPC,WAAY,OACZG,UAAW,SACXd,aAAc,QALlB,mCAQkC,6BARlC,+CAUM,IACN,6BACA,yBAAKzB,MAAO,CAAEwC,SAAU,QAASC,OAAQ,SACvC,kBAAC,EAAD,CACEhC,mBAAoB7B,KAAK9B,MAAM2D,mBAC/B1D,cAAe6B,KAAK9B,MAAMC,cAC1BqE,SAAUxC,KAAKwC,WAEhBxC,KAAK8D,cACL9D,KAAK+D,6B,GAlEErC,aAgFHsC,eAPS,SAACC,GACvB,MAAO,CACLpC,mBAAoBoC,EAAMpC,mBAC1B1D,cAAe8F,EAAM9F,iBAIe,CACtCgF,eCrF4B,SAAC7D,GAAD,IAAU4E,EAAV,uDAAqB,YAArB,8CAAqC,WACjEC,EACAC,GAFiE,eAAArC,EAAA,sEAI1CsC,EAAMC,IAAN,yBACHhF,EADG,mBACe4E,EADf,uDAJ0C,OAI3DK,EAJ2D,OAOjEJ,EAAS,CACPzD,KAAM,mBACN8D,QAAQ,aAAGlF,QAASA,GAAU4E,EAAWK,EAASlG,QATa,2CAArC,yDDsF5B+E,sBC1EmC,yDAAM,WAAOe,GAAP,eAAApC,EAAA,sEAClBsC,EAAMC,IAAN,wCADkB,OACnCC,EADmC,OAEzCJ,EAAS,CACPzD,KAAM,0BACN8D,QAASD,EAASlG,OAJqB,2CAAN,wDDwEtB2F,CAGZf,G,OEpFYwB,cAAgB,CAC7BtG,cCNa,WAAyB,IAAxB8F,EAAuB,uDAAf,GAAIS,EAAW,uCACrC,OAAQA,EAAOhE,MACb,IAAK,mBACH,MAAM,GAAN,mBAAWuD,GAAX,CAAkBS,EAAOF,UAC3B,QACE,OAAOP,IDEXpC,mBEPa,WAAyB,IAAxBoC,EAAuB,uDAAf,GAAIS,EAAW,uCACrC,OAAQA,EAAOhE,MACb,IAAK,0BACH,OAAOgE,EAAOF,QAChB,QACE,OAAOP,M,QCIPU,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YACZC,EACAN,EAAiBO,YAAgBC,OAGnCC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.75e53e6a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport _ from \"lodash\";\r\n\r\nclass LineGraph extends Component {\r\n  chartRef = React.createRef();\r\n\r\n  //   run once only after first\r\n  componentDidMount() {\r\n    this.chartReference = this.initChart();\r\n    this.chartReference.legend.display = false;\r\n    this.updateChart(this.chartReference);\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (this.props.countriesData.length != prevprops.countriesData.length) {\r\n      this.updateChart(this.chartReference);\r\n    }\r\n  }\r\n\r\n  updateChart = (chart) => {\r\n    if (this.props.countriesData.length > 0) {\r\n      chart.data.labels = _.uniq(\r\n        this.props.countriesData[0].confirmed.map(({ Date }) =>\r\n          Date.substr(0, 10)\r\n        )\r\n      );\r\n      const capitalize = (s) => {\r\n        if (typeof s !== \"string\") return \"\";\r\n        return s.charAt(0).toUpperCase() + s.slice(1);\r\n      };\r\n\r\n      var lastItem = this.props.countriesData[\r\n        this.props.countriesData.length - 1\r\n      ];\r\n      var randomColor = \"#000000\".replace(/0/g, function () {\r\n        return (~~(Math.random() * 16)).toString(16);\r\n      });\r\n      chart.data.datasets = [\r\n        ...chart.data.datasets,\r\n        {\r\n          label: `${capitalize(lastItem.country)}`,\r\n          data: lastItem.confirmed.map((item) => {\r\n            return item.Cases;\r\n          }),\r\n          pointRadius: 2.5,\r\n          borderColor: randomColor,\r\n        },\r\n      ];\r\n\r\n      chart.data.datasets = _.uniqBy(chart.data.datasets, (data) => data.label);\r\n    }\r\n    chart.update();\r\n  };\r\n\r\n  initChart() {\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n    return new Chart(myChartRef, {\r\n      type: \"line\",\r\n      options: {\r\n        legend: {\r\n          labels: {\r\n            boxWidth: 5,\r\n            usePointStyle: true,\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                // display: false,\r\n              },\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui container\"\r\n        style={{ background: \"white\", borderRadius: \"0.5em\", padding: \"2em\" }}\r\n      >\r\n        <canvas id=\"myChart\" ref={this.chartRef} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass CountrySelector extends Component {\r\n  renderCountries = () => {\r\n    if (this.props.availableCountries) {\r\n      this.props.availableCountries.sort((a, b) => {\r\n        var textA = a.Country.toUpperCase();\r\n        var textB = b.Country.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      });\r\n    }\r\n\r\n    return _.uniq(this.props.availableCountries)\r\n      .sort()\r\n      .map((country, index) => {\r\n        return (\r\n          <option value={country.Country} key={`${country.Slug}${index}`}>\r\n            {country.Country}\r\n          </option>\r\n        );\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <select\r\n        onChange={(e) => {\r\n          if (\r\n            this.props.countriesData.find((data) => {\r\n              return data.country === e.target.value;\r\n            }) === undefined\r\n          ) {\r\n            this.props.onChange(true, e.target.value);\r\n          }\r\n        }}\r\n        style={{ marginBottom: \"1em\", borderRadius: \"0.5em\" }}\r\n        className=\"ui fluid search dropdown\"\r\n      >\r\n        {this.renderCountries()}\r\n        <option value=\"\">Select a Country</option>\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountrySelector;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.covid19api.com/\",\r\n});\r\n","import React, { Component } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\nimport CountrySelector from \"./CountrySelector\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCountryData, getAvailableCountries } from \"../actions\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getAvailableCountries();\r\n  }\r\n\r\n  renderChart() {\r\n    if (this.loading && this.props.countriesData.length === 0) {\r\n      console.log(this.loading);\r\n      return <div style={{ color: \"white\", fontWeight: \"bold\" }}>Loading</div>;\r\n    } else if (this.props.countriesData.length !== 0) {\r\n      return <LineChart countriesData={this.props.countriesData} />;\r\n    } else\r\n      return (\r\n        <div style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n          <h3>Select countries and compare data accross countries.</h3>\r\n          <p>APIs provided by api.covid19api.com</p>\r\n        </div>\r\n      );\r\n  }\r\n  renderAdditionalInfo() {\r\n    if (this.props.countriesData.length !== 0) {\r\n      return (\r\n        <div style={{ color: \"white\" }}>\r\n          <ul>\r\n            <div style={{ fontWeight: \"bold\" }}>Features</div>\r\n            <li>\r\n              Redux-Thunk used as a middleware to handle asyn funtions in redux.\r\n            </li>\r\n            <li>Includes conditional check to prevent additional API calls</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  onChange = (loading, country) => {\r\n    this.loading = loading;\r\n    return this.props.getCountryData(country);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div\r\n        className=\"ui\"\r\n        style={{ background: \"#11264b\", minHeight: \"100vh\", padding: \"1em\" }}\r\n      >\r\n        <h3\r\n          style={{\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"1em\",\r\n          }}\r\n        >\r\n          Covid 19 Cases Chart built with <br />\r\n          React, Redux, Express, Redux-Thunk, ChartJs\r\n        </h3>{\" \"}\r\n        <br />\r\n        <div style={{ maxWidth: \"800px\", margin: \"auto\" }}>\r\n          <CountrySelector\r\n            availableCountries={this.props.availableCountries}\r\n            countriesData={this.props.countriesData}\r\n            onChange={this.onChange}\r\n          />\r\n          {this.renderChart()}\r\n          {this.renderAdditionalInfo()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    availableCountries: state.availableCountries,\r\n    countriesData: state.countriesData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCountryData,\r\n  getAvailableCountries,\r\n})(App);\r\n","import covid from \"../apis/covid\";\r\n\r\nexport const getCountryData = (country, dataType = \"confirmed\") => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const response = await covid.get(\r\n    `/total/country/${country}/status/${dataType}?from=2020-01-01T00:00:00Z&to=2020-05-30T00:00:00Z`\r\n  );\r\n  dispatch({\r\n    type: \"GET_COUNTRY_DATA\",\r\n    payload: { country: country, [dataType]: response.data },\r\n  });\r\n};\r\nexport const getAvailableCountries = () => async (dispatch) => {\r\n  const response = await covid.get(`https://api.covid19api.com/countries`);\r\n  dispatch({\r\n    type: \"GET_AVAILABLE_COUNTRIES\",\r\n    payload: response.data,\r\n  });\r\n};\r\n","import { combineReducers } from \"redux\";\r\n// import { reducer as formReducer } from \"redux-form\";\r\nimport countryListReducer from \"./countryListReducer\";\r\nimport availableCountriesReducer from \"./availableCountriesReducer\";\r\n\r\nexport default combineReducers({\r\n  countriesData: countryListReducer,\r\n  availableCountries: availableCountriesReducer,\r\n});\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_COUNTRY_DATA\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_AVAILABLE_COUNTRIES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\n// redux devtools related\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// usual createStore\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}